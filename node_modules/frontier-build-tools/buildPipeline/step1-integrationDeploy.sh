################################################################################
#
# This is the first step of the build process
# This file will:
#   1. Install frontier-build-tools locally
#   2. Push environment variables to -int
#   3. Deploy repo code to -int
#   4. Run unit tests found in `/bin/tests`
#   5. Perform a smoke test against fs-$APP_NAME-int.herokuapp.com
#   6. (optional) Perform a smoke test against another (domain-mounted) url ($INTEGRATION_SMOKE_URL)
#
################################################################################

# fail fast
set -o errexit
set -o pipefail


# FS-Config -> env vars
echo "Update integration app's env vars"
cake -u int -t int -e production deploy:setup


# Push to -int
heroku config:set GITHUB_LOGIN=fs-readonly -a fs-$APP_NAME-int
heroku config:set GITHUB_PASSWORD=uD8bBnoLc9qX -a fs-$APP_NAME-int
git push git@heroku.com:fs-$APP_NAME-int.git master --force


# Run the unit tests
heroku run "bin/tests && echo Success" -a fs-$APP_NAME-int | tee output.txt
tail -1 output.txt | grep Success
rm output.txt


# test that the app responds via https
echo "Starting a smoke test by loading https://fs-$APP_NAME-int.herokuapp.com"
curl https://fs-$APP_NAME-int.herokuapp.com > output.txt
APP_RESPONSE=`cat output.txt`
rm output.txt
echo "Finished smoke test"

appError='Application Error'
if [[ "$APP_RESPONSE" == *"$appError"* ]]
then
  echo "Exiting build because app failed to startup on heroku"
  exit 1
fi


# Smoke test against an optional domain-mounted url
if [ ! -z "$INTEGRATION_SMOKE_URL" ]; then
  echo "Starting an optional smoke test by loading $INTEGRATION_SMOKE_URL"
  curl $INTEGRATION_SMOKE_URL > output.txt
  APP_RESPONSE=`cat output.txt`
  rm output.txt
  echo "Finished smoke test"

  appError='You have encountered a broken link or a page that does not exist'
  if [[ "$APP_RESPONSE" == *"$appError"* ]]
  then
    echo "Exiting build because app failed to startup against parked url"
    exit 1
  fi
fi
