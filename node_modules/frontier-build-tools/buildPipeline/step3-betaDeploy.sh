################################################################################
#
# This is the third step of the build process
# This file will:
#   1. Promote the code from -int to -beta
#   2. Perform a smoke test against fs-$APP_NAME-beta.herokuapp.com
#   3. (optional) Perform a smoke test against another (domain-mounted) url ($BETA_SMOKE_URL)
#
################################################################################

# fail fast
set -o errexit
set -o pipefail




############################
#          BETA            #
############################

# Add environment variables to -beta
echo "Update beta app's env vars"
cake -u beta -t beta -e production deploy:setup



# Ensure that the correct downstream is set
heroku pipeline:add fs-${APP_NAME}-beta -a fs-${APP_NAME}-int > output.txt
DS_RESULT=`cat output.txt`
rm output.txt

# This failure would require manual adjustment of the heroku pipelines
dsError='Downstream app already configured'
if [[ "$DS_RESULT" == *"$dsError"* ]]
then
  echo "Exiting build because integration app downstream was already set incorrectly"
  exit 1
fi



# Promote from -int to -beta
heroku pipeline:promote -a fs-$APP_NAME-int



# test that the app responds via https
curl https://fs-$APP_NAME-beta.herokuapp.com | tee output.txt
APP_RESPONSE=`cat output.txt`
rm output.txt

appError='Application Error'
if [[ "$APP_RESPONSE" == *"$appError"* ]]
then
  echo "Exiting build because beta app failed to startup on heroku"
  exit 1
fi


# Smoke test against an optional domain-mounted url
if [ ! -z "$BETA_SMOKE_URL" ]; then

  echo "Starting a smoke test by loading $BETA_SMOKE_URL"
  curl $BETA_SMOKE_URL > output.txt
  APP_RESPONSE=`cat output.txt`
  rm output.txt
  echo "Finished smoke test"

  appError='You have encountered a broken link or a page that does not exist'
  if [[ "$APP_RESPONSE" == *"$appError"* ]]
  then
    echo "Exiting build because app failed to startup against parked url"
    exit 1
  fi

fi
