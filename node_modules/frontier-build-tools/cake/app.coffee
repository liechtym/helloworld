deps = require('../config')

# Define which options are available to support the tasks
option '-a', '--appName [STRING]', '(optional)name of app to act on (i.e., upload, landing) - defaults to current app folder'
option '-u', '--username [STRING]', '(optional)username that will be included in the heroku app name (defaults to logged in user)'
option '-b', '--branchName [STRING]', '(optional)git branch that will be pushed (defaults to master)'
option '-e', '--node_env [STRING]', '(optional)sets the NODE_ENV environment variable for the heroku app (defaults to development)'
option '-t', '--targetEnv [STRING]', '(optional)indicates which environment you are deploying (local, dev, test, prod)'
option '-z', '--zipName [STRING]', '(optional)name of the archive file to be used for translation tasks'
option '-l', '--languageCode [STRING]', '(required)language code of properties files being imported'
option '-f', '--fileName [STRING]', '(required)name of the file to upload'
option '-x', '--expiresTime [NUMBER]', '(optional)hours this file should live in browser cache (defaults to 8 hours)'

# bootstrap the dependencies and define the tasks
deps.resolve (manageEnv, i18n, assets, deploy, docs) ->
  task 'env:setup', 'Setup the specified deploy environment', manageEnv.setup
  task 'env:show', 'Display the specified deploy environment vars', manageEnv.show

  task 'i18n:export', 'Pull all of the English i18n json files out, convert to properties files, and create an archive that can be sent to translations', i18n.exportEnglish
  task 'i18n:exportAll', 'Pull all of the i18n json files out, convert to properties files, and create an archive that can be sent to translations', i18n.exportAll
  task 'i18n:import', 'Import the archive that translations sends back to us', i18n.importTranslations
  task 'i18n:convert', 'Convert all properties files in an archive into JSON. Only use if \'import\' task won\'t work.', i18n.convertArchiveToJSON
  task 'i18n:pseudo', 'Create the pseudo locale file.', i18n.createPseudoLoc

  task 'assets:precompile', 'Precompile all of the static assets', assets.precompile
  task 'assets:cleanForProd', "Remove static files before slug gets built", assets.cleanForProd
  task 'assets:s3', "Push the precompiled static assets to an s3 bucket", assets.pushToS3
  task 'assets:deploy', 'Precompiles assets and deploys them to S3 (build server task)', assets.deploy

  task 'deploy:setup', 'create a heroku deploy target for the specified user', deploy.setup
  task 'deploy', 'deploy this app to heroku', deploy.deploy
  task 'open', 'open the heroku app', deploy.open

  task 'doc:upload', 'push a file to servers to be served by CDN', docs.upload

# I think this can be dumped as soon as apps stop calling it in their cake file
module.exports = (basePath) ->
