container = require('dependable').container
deps = container()
path = require 'path'
fs = require 'fs'

# Read app's package.json to pull out params
packageFile = fs.readFileSync(path.join(process.cwd(), 'package.json'), 'utf8')
app = JSON.parse(packageFile)
defaultAppName = app?.name

fsConfig = require('./src/fsConfig')
defaultConf = fsConfig.init 'default', 'default'
defaultEnv = defaultConf.getConfHash()

deps.register 'defaultAppName', -> return defaultAppName
deps.register 'utils', require('./src/utils')
deps.register 'log', require('./src/log')
deps.register 'fsConfig', fsConfig
deps.register 'defaultConf', defaultConf
deps.register 'defaultEnv', defaultEnv

deps.register 'aws2js', require('aws2js')
deps.register 'assetManager', require('asset-manager')
deps.register 'path', require('path')
deps.register 'fs', require('fs')
deps.register 'async', require('async')
deps.register 'glob', () -> require('glob') #Because the glob module exports a function with params, we have to wrap it so that dependable doesn't try and resolve those params

deps.register 's3', require('./src/s3')
deps.register 'docs', require('./src/docs')
deps.register 'i18n', require('./src/i18n')
deps.register 'deploy', require('./src/deploy')
deps.register 'assets', require('./src/assets')
deps.register 'manageEnv', require('./src/manageEnv')

module.exports = deps
